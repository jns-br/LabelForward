version: '3'
volumes: 
  web_data:
    external: true
services:
  redis:
    image: redis:latest
    restart: always 
  postgres:
    image: postgres:latest
    restart: always
    environment: 
      - POSTGRES_PASSWORD=postgres_password
  dbhelper:
    depends_on: 
      - postgres
      - redis
      - api
      - client
    build: 
      dockerfile: Dockerfile.dev
      context: ./db_helper
    volumes:
      - ./db_helper:/app
    environment: 
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DATA_PATH=exampledata/data.csv # adjust to path of your data file
      - LABEL_PATH=exampledata/labels.csv # adjust to path of your label file
      - ACCESSOR_PATH=exampledata/accessors.csv # adjust to path of your accesor file
  nginx:
    restart: always
    build: 
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports: 
      - '3050:80'
  api:
    user: root
    restart: always
    depends_on: 
      - postgres
      - redis
    build:
      dockerfile: Dockerfile.dev
      context: ./backend
    volumes: 
      - /usr/src/app/node_modules
      - ./backend:/usr/src/app
      - web_data:/app/data
    environment: 
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - NODE_PORT=5000
      - JWT_SECRET=need_a_better_secret # set your own secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BATCH_SIZE=10 # set size when al learner should try an update
  client:
    stdin_open: true
    restart: always
    depends_on: 
      - postgres
      - api
    build: 
      dockerfile: Dockerfile.dev
      context: ./frontend
    volumes: 
      - /app/node_modules
      - ./frontend:/app
  allearner:
    restart: always
    depends_on: 
      - postgres
      - api
      - client
      - redis
      - dbhelper
    build: 
      dockerfile: Dockerfile.dev
      context: ./al_learner
    environment: 
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BATCH_SIZE=10 # set batch size of new data to be trained on
      - MIN_LABEL_COUNT=1 # set count of minimum labels needed to trigger a vote on a majority label
    deploy:
      resources:
        reservations:
          memory: 700M
  alpredictor:
    restart: always
    depends_on: 
      - postgres
      - api
      - client
      - redis
      - dbhelper
    build: 
      dockerfile: Dockerfile.dev
      context: ./al_predictor
    volumes: 
      - web_data:/app/data/
    environment: 
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  dlmanager:
    user: root
    restart: always
    depends_on: 
      - postgres
      - api
      - client
      - redis
      - dbhelper
    build: 
      dockerfile: Dockerfile.dev
      context: ./dl_manager
    environment: 
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379